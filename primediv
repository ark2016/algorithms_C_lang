#include <stdio.h>
#include <stdbool.h>

bool check_bit(unsigned long long a, int b) {
    return (a | (1 << b)) == a;
}

unsigned long long set_bit(unsigned long long a, int b) {
    return a | (1 << b);
}

unsigned long long remove_bit(unsigned long long a, int b) {
    return a & ~(1 << b);
}

void reshetoEratosphena(unsigned long long arr[],int a){
    arr[0] = remove_bit(arr[0], 0);
    arr[1] = remove_bit(arr[0], 1);
    arr[0] = set_bit(arr[0], 2);
    for (long long i = 4; i < a; i += 2){
        arr[i/62] = remove_bit(arr[i/63],i%63);
    }
    for (long long i = 3; i < a; i += 2){
        for (long long j = i + i; j < a; j += i){
            arr[j/62] = remove_bit(arr[j/63],j%63);
        }
    }
}

/*
void reshetoEratosphena(long long arr[], long long a){
    arr[0] = 0;
    arr[1] = 0;
    for (long long i = 4; i < a; i += 2){
        arr[i] = 0;
    }
    for (long long i = 3; i < a; i += 2){
        for (long long j = i + i; j < a; j += i){
            arr[j] = 0;
        }
    }
}
*/
long long max(long long a, long long b){
    return a > b ? a : b;
}

long long abs(long long x){
    return x < 0 ? -x : x;
}

int main() {
    long long x, a, result = 0;
    scanf("%lld",&x);
    x = abs(x);
//    a =  x / 2 + 1;
    a = x / 2 / 63 + 2;
    unsigned long long arr[a]; // <<63
    for (int i = 0; i < a; ++i)
        arr[i] = -1;// 111....11111
    reshetoEratosphena(arr, a);
    for (long long i = 2; i*i<= x; ++i){
        if (0 == x % i) {
            if (check_bit(arr[i/63],i%63)){
                result = max(result, i);
            }
            if (check_bit(arr[x/i/63],x/i%63)){
                result = max(result, x/i);
            }
        }
    }
    /*
    long long arr[a];
    for (int i = 0; i < a; ++i)
        arr[i] = 1;
    reshetoEratosphena(arr, a);
    for (long long i = 2; i*i<= x; ++i){
        if (0 == x % i) {
            if (1 == arr[i]){
                result = max(result, i);
                x /= i;
            }
            if (1 == arr[x/i]){
                result = max(result, x/i);
//                x /= i;
            }
        }
    }
     */

    if (0 == result) result = x;
    printf("%lld\n", result);
    return 0;
}
